<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_egg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Values

dir = point_direction(x,y,x+10,y-10);
speed = 6;

/*
hsp = 0;
hsp_carry = 0;
vsp = 0;
grav = 0.2;
movespeed = 4;
key_down = 0;
jumps = 0;
jumpsmax = 2;

jumpspeed_normal = 7;
jumpspeed_powerup= 10;

jumpspeed = jumpspeed_normal;

countdown = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if timer == 0
    {
    vspeed = vspeed + (1/15);
    } //(for every 15 steps the vertical speed is increased by 1)

if vspeed == 8
    {
    speed = 0;
    timer=1;
    } // When the vertical speed is 8 the overall speed is set to 0

    
/*
// Basic Movement
if (vsp &lt; 10) vsp += grav;

// Vertical Collision
if (place_meeting(x,y+vsp,obj_collision))
    {
    while (!place_meeting(x,y+sign(vsp),obj_collision))
        {
        y += sign(vsp);
        }
    vsp = 0;
    } 
y += vsp;

// Horizontal Collision
if (place_meeting(x+hsp_final,y,obj_collision))
    {
    while (!place_meeting(x+sign(hsp_final),y,obj_collision))
        {
        x += sign(hsp_final);
        }
    hsp_final = 0;
    hsp = 0;
    } 
x += hsp_final;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
