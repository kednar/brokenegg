<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_splot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Values

hdir = -(global.hdir);
timer = 40;

//vsp = -2;
max_vspeed = 3;
hsp = 3.5*(hdir);
grav = 0.2;

break_egg = 0;
breaking_point = 3; // velocity at which egg breaks on impact
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hsp != 0 &amp;&amp; timer &gt; 5
    {
    hsp -= (hdir*(1/timer)); // slow down egg horizontally in right direction
    timer -= 1;
    }

if (vsp &lt; max_vspeed) vsp += grav;

// Vertical Collision
if (place_meeting(x,y+vsp,obj_collision))
    {
    instance_destroy();
    }

// Horizontal Collision
if (place_meeting(x+hsp,y,obj_collision))
    {
    hsp = 0;
    }

// Collision with Chicken
if (place_meeting(x,y,obj_chicken) &amp;&amp; sign(hsp) &gt; 2)
    {
    hit_chicken = instance_nearest(x,y,obj_chicken);
    (hit_chicken).hit = 1;
    instance_destroy();
    }

if ((place_meeting(x,y,obj_chicken) &amp;&amp; vsp &gt; 2))    
    {
    hit_chicken = instance_nearest(x,y,obj_chicken);
    (hit_chicken).hit = 1;
    instance_destroy();
    }

/*
// Collision with farmer
if (place_meeting(x,y,obj_farmer))
    {
    if (sign(hsp) &gt; 2) || (vsp &gt; 2)
        {
        if ((obj_farmer).vulnerable == 0)
            {
            //instance_create((other).x,(other).y,obj_egg_splat);
            instance_create(x,y,obj_egg_splat);
            }
        else
            {
            //instance_create((other).x,(other).y,obj_egg_splat_head);
            instance_create(x,y,obj_egg_splat_head)
            (obj_farmer).hit = 1;
            (obj_farmer).sprite_index = spr_farmer_hit;
            (obj_farmer).alarm[3] = 45;
            (obj_farmer).hearts -= 1;
            (obj_farmer).just_hit = 1;
            }
        instance_destroy();
        }
    }    
*/

x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
