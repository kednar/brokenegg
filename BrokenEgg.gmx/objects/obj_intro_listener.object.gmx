<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define Values
player = (obj_player_intro);
xx = (player).x;
yy = (player).y;
passed_400 = 0;
size = 0.25;

intro_check1 = 0;
intro_check2 = 1;
intro_check3 = 0;
intro_check4 = 1;
intro_check5 = 1;
intro_check6 = 1;

zooming = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define Text Strings &amp; Variables

intro_text[0] = "0";
intro_text[1] = "no SPACE";
intro_text[2] = "need more SPACE"
intro_text[3] = "to dash RIGHT like an ARROW";
intro_text[4] = "flying UPwards is KEY";
intro_text[5] = "soar through the air";
intro_text[6] = "too weak";
intro_text[7] = "soon";
intro_text[8] = "must find a way";
intro_text[9] = "to break free";

text_object[0] = (obj_intro_text_0);
text_object[1] = (obj_intro_text_1);
text_object[2] = (obj_intro_text_2);
text_object[3] = (obj_intro_text_3);
text_object[4] = (obj_intro_text_4);
text_object[5] = (obj_intro_text_5);
text_object[6] = (obj_intro_text_6);
text_object[7] = (obj_intro_text_7);
text_object[8] = (obj_intro_text_8);
text_object[9] = (obj_intro_text_9);

text0_active = 0;
text1_active = 1;
text2_active = 0;
text3_active = 0;
text4_active = 0;
text5_active = 0;
text6_active = 0;
text7_active = 0;
text8_active = 0;
text9_active = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_fade_out);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enable flying
(player).can_fly = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Main listener

hatch_counter = (player).hatch_counter;
xx = (player).x;
yy = (player).y;

// Need more SPACE
if hatch_counter == 3
    {
    text1_active = 0;
    text2_active = 1;
    }

// RIGHT ARROW
if hatch_counter &gt;= 7
    {
    text2_active = 0;
    text3_active = 1;
    }

// UP KEY
if xx &gt;= 135 &amp;&amp; intro_check1 == 0
    {
    alarm[0] = 20; // enable flying
    text3_active = 0;
    text4_active = 1;
    text5_active = 1;
    intro_check1 = 1;
    intro_check2 = 0;
    }

// Flying
if intro_check2 == 0
    {
    if xx &gt;= 160 || yy &lt;= 100
        {
        (player).movespeed = 1.5;
        zooming = 1;
        intro_check2 = 1;
        text4_active = 0;
        }
    }

// Too weak
if intro_check3 == 0
    {
    if xx &gt;= (obj_intro_text_6).x
        {
        text5_active = 0;
        text6_active = 1;
        intro_check3 = 1;
        intro_check4 = 0;
        }
    }

// Soon
if intro_check4 == 0
    {
    if xx &gt;= (obj_intro_text_7).x
        {
        text6_active = 0;
        text7_active = 1;
        intro_check4 = 1;
        intro_check5 = 0;
        }
    }

// must find a way
if intro_check5 == 0
    {
    if xx &gt;= (obj_intro_text_8).x
        {
        text7_active = 0;
        text8_active = 1;
        intro_check5 = 1;
        intro_check6 = 0;
        }
    }

// to break free
if intro_check6 == 0
    {
    if xx &gt;= (obj_intro_text_9).x
        {
        text8_active = 0;
        text9_active = 1;
        intro_check6 = 1;
        alarm[1] = 120; // fade to black, next room
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Zooming Out

if zooming == 1
    {
    view_hview[0] += ((180-45)/150);
    view_wview[0] += ((360-90)/150);
    view_yview[0] -= (70/150);
    size += (0.25/150);
    view_object[0] = obj_player_intro;
    if view_hview [0] == 180 zooming = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.faded_out</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display Intro Text
draw_set_font(f_effort);
/*var i;
length = array_length_1d(intro_text);
for (i = 0; i &lt; length-1; i += 1)
    {
    location = text_object[i];
    xx = (location).x;
    yy = (location).y;
    script_execute(scr_display_text,xx,yy,intro_text[i])
    }
if passed_400 == 1 
*/

if text0_active == 1 draw_text_ext_transformed((obj_intro_text_0).x, (obj_intro_text_0).y, string(intro_text[0]), 30, 400, size, size, image_angle);
if text1_active == 1 draw_text_ext_transformed((obj_intro_text_1).x, (obj_intro_text_1).y, string(intro_text[1]), 30, 400, size, size, image_angle);
if text2_active == 1 draw_text_ext_transformed((obj_intro_text_2).x, (obj_intro_text_2).y, string(intro_text[2]), 30, 400, size, size, image_angle);
if text3_active == 1 draw_text_ext_transformed((obj_intro_text_3).x, (obj_intro_text_3).y, string(intro_text[3]), 30, 400, size, size, image_angle);
if text4_active == 1 draw_text_ext_transformed((obj_intro_text_4).x, (obj_intro_text_4).y, string(intro_text[4]), 10, 400, size, size, image_angle);
if text5_active == 1 draw_text_ext_transformed((obj_intro_text_5).x, (obj_intro_text_5).y, string(intro_text[5]), 20, 400, size, size, image_angle);
if text6_active == 1 draw_text_ext_transformed((obj_intro_text_6).x, (obj_intro_text_6).y, string(intro_text[6]), 30, 400, size, size, image_angle);
if text7_active == 1 draw_text_ext_transformed((obj_intro_text_7).x, (obj_intro_text_7).y, string(intro_text[7]), 30, 400, size, size, image_angle);
if text8_active == 1 draw_text_ext_transformed((obj_intro_text_8).x, (obj_intro_text_8).y, string(intro_text[8]), 30, 400, size, size, image_angle);
if text9_active == 1 draw_text_ext_transformed((obj_intro_text_9).x, (obj_intro_text_9).y, string(intro_text[9]), 30, 400, size, size, image_angle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
